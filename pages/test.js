import { useState, useEffect } from 'react';
import Footer from "@/components/Footer";
import Header from "@/components/Header";
import NavigationBar from "@/components/mobiles/NavigationBar";
import Head from "next/head";
import UAParser from 'ua-parser-js';
import HeaderMobile from '@/components/mobiles/HeaderMobile';

export default function Test() {
  const [windowSize, setWindowSize] = useState({
    width: 0,
    height: 0
  });
  const [deviceType, setDeviceType] = useState('');
  const [scrolling, setScrolling] = useState(false); // Ajout de l'état pour suivre le scroll

  useEffect(() => {
    const handleResize = () => {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight
      });
    };

    // Gestionnaire d'événement de scroll pour détecter le scroll
    const handleScroll = () => {
      setScrolling(true);

      // Définir un délai pour détecter si le scroll est arrêté
      clearTimeout(timeout);
      const timeout = setTimeout(() => {
        setScrolling(false);
      }, 200); // 200 millisecondes (ajustez selon vos besoins)
    };

    // Vérifier si window est défini (côté client)
    if (typeof window !== 'undefined') {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight
      });
      window.addEventListener('resize', handleResize);
      window.addEventListener('scroll', handleScroll); // Ajouter le gestionnaire d'événements de scroll

      // Nettoyage du listener d'événement lors du démontage du composant
      return () => {
        window.removeEventListener('resize', handleResize);
        window.removeEventListener('scroll', handleScroll); // Supprimer le gestionnaire d'événements de scroll
      };
    }
  }, []);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const parser = new UAParser();
      const userAgent = window.navigator.userAgent;
      parser.setUA(userAgent);
      const result = parser.getResult();

      const device = result.device.type;
      setDeviceType(device);
    }
  }, [deviceType]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {deviceType === "mobile" ? <HeaderMobile /> : <Header screenWidth={windowSize.width} />}
      
      <main className='container mx-auto'>
        <p>Largeur de la fenêtre en temps réel : {windowSize.width}px</p>
        <p>Hauteur de la fenêtre en temps réel : {windowSize.height}px</p>
        <p>Type d'appareil : {deviceType}</p>
        {/* Utilisez l'état scrolling pour afficher si le scroll est en cours ou arrêté */}
        {scrolling ? <p>Scrolling en cours...</p> : <p>Scroll arrêté</p>}
        {/* Votre contenu local */}
        Test

        <div>
            {``}
        </div>
      </main>
      <Footer />
      {deviceType === 'mobile' && <NavigationBar />}
    </>
  );
}
